/*
 * ChaTex Web API
 *
 * The Web API for ChaTex
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using IO.Swagger.Models;
using Swashbuckle.AspNetCore.SwaggerGen;
using Business.Roles;
using Business.Models;
using System.Linq;
using WebAPI.Models.Mappers;
using WebAPI.Authentication;

namespace IO.Swagger.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    public class RolesApiController : Controller
    { 

        private readonly IRoleManager roleManager;

       public RolesApiController(IRoleManager roleManager)
        {
            this.roleManager = roleManager;
        }

        /// <summary>
        /// Get roles
        /// </summary>
        /// <remarks>Get all roles in the system</remarks>
        /// <response code="200">Successfully retrieved all roles</response>
        /// <response code="401">The user was not authorized to access this resource</response>
        [HttpGet]
        [Route("/1.0.0/roles")]
        [SwaggerOperation("GetAllRoles")]
        [SwaggerResponse(200, type: typeof(List<RoleDTO>))]
        [ServiceFilter(typeof(ChaTexAuthorization))]
        public virtual IActionResult GetAllRoles()
        {
            int? loggedInUserId = (int?)HttpContext.Items[ChaTexAuthorization.UserIdKey];

            IEnumerable<RoleModel> roles = roleManager.GetAllRoles();
            IEnumerable<RoleDTO> dtoResponse = roles.Select(u => RoleMapper.MapRoleToRoleDTO(u)); ;
            return new ObjectResult(dtoResponse);
        }
    }
}
